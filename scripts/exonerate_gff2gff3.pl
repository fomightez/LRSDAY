#!/usr/bin/perl
use warnings;
use strict;
use Getopt::Long;

##############################################################
#  script: exonerate_gff2gff3.pl
#  author: Jia-Xing Yue (GitHub ID: yjx1217)
#  last edited: 2017.06.17
#  description: reformat GFF output of exonerate
#  example: perl exonerate_gff2gff3.pl -i input.gff -o output.gff3 -t genome_tag
##############################################################

my ($input, $output, $tag);

GetOptions('i|input:s' => \$input, # input file: raw gff file generated by exonerate
	   't|tag:s' => \$tag, # genome_tag
	   'o|output:s' => \$output); # output file: the reformtted GFF3 file

my $input_fh = read_file($input);
my $output_fh = write_file($output);

while (<$input_fh>) {
    chomp;
    /^Command line/ and next;
    /^Hostname/ and next;
    /^#/ and next;
    /\-\- completed exonerate analysis/ and next;
    my @line = split /\t/, $_;
    my $chr = $line[0];
    my $start = $line[3];
    my $end = $line[4];
    my $score = $line[5];
    my $strand = $line[6];
    my $annot = $line[8];
    my ($id) = ($annot =~ /Query\s*(\S+)\s*;/);
    my $name = $id;
    print $output_fh "$chr\t$tag\tcentromere\t$start\t$end\t.\t$strand\t.\tID=$id;Name=$name\n";
}

sub read_file {
    my $file = shift @_;
    my $fh;
    if ($file =~ /\.gz$/) {
        open($fh, "gunzip -c $file |") or die "can't open pipe to $file";
    } else {
        open($fh, $file) or die "can't open $file";
    }
    return $fh;
}

sub write_file {
    my $file = shift @_;
    my $fh;
    if ($file =~ /\.gz$/) {
        open($fh, "| gzip -c >$file") or die "can't open $file\n";
    } else {
        open($fh, ">$file") or die "can't open $file\n";
    }
    return $fh;
}  
