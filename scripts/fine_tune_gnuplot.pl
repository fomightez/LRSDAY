#!/usr/bin/perl
use warnings;
use strict;
use Getopt::Long;

##############################################################
#  script: fine_tune_gnuplot.pl
#  author: Jia-Xing Yue (GitHub ID: yjx1217)
#  last edited: 2017.06.17
#  description: adjust gnuplot plotting command generated by mummerplot
#  example: perl fine_tune_gnuplot.pl -i input.gp -o output.gp -r ref -q query
##############################################################

my ($input, $output, $ref_tag, $query_tag);

GetOptions ('input|i:s' => \$input, # input gnuplot plotting command generated by mummerplot
	    'output|o:s' => \$output, # output gnuplot plotting command
	    'ref_tag|r:s' => \$ref_tag, # tag for the reference genome/sequences
	    'query_tag|q:s' => \$query_tag); # tag for the query genome/sequences

my $input_fh = read_file($input);
my $output_fh = write_file($output);

while (<$input_fh>) {
    chomp;
    if (/set output/) {
	my ($outname) = ($_ =~ /set output \"(\S+)\.ps\"/);
	print $output_fh "set output \"| ps2pdf - $outname.pdf\"\n";
    } elsif (/set xlabel \"REF\"/) {
	print $output_fh "set xlabel \"$ref_tag\"\n";
    } elsif (/set ylabel \"QRY\"/) {
	print $output_fh "set ylabel \"$query_tag\"\n";
    } elsif (/set size/) {
	print $output_fh "set size ratio -1\n";
    } elsif (/set style line (1|2|3)/) {
	my ($setting) = ($_ =~ /(set style line.*ps)/);
	print $output_fh "$setting 0.01\n";
    } elsif (/set mouse clipboardformat/) {
	next;
    } else {
	print $output_fh "$_\n";
    }
}

sub read_file{
    my $filename = shift @_;
    my $fh;
    open($fh, $filename) or die "cannot open the input file $filename\n";
    return $fh;
}

sub write_file{
    my $filename = shift @_;
    my $fh;
    open($fh, ">$filename") or die "cannot open the output file $filename\n";
    return $fh;
}  
